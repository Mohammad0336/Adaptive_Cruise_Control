<launch>
  <!-- planning module -->

  <arg name="vehicle_param_file"/>
  <arg name="use_pointcloud_container"/>
  <arg name="pointcloud_container_name"/>
  <arg name="path_smoother_type"/>
  <arg name="velocity_smoother_type"/>
  <arg name="vehicle_param_file"/>
  <arg name="use_pointcloud_container"/>
  <arg name="pointcloud_container_name"/>
  <arg name="use_surround_obstacle_check"/>
  <arg name="use_experimental_lane_change_function"/>

  <!-- common -->
  <arg name="common_param_path"/>
  <arg name="nearest_search_param_path"/>
  <!-- mission planner -->
  <arg name="mission_planner_param_path"/>
  <!-- behavior path planner -->
  <arg name="side_shift_param_path"/>
  <arg name="avoidance_param_path"/>
  <arg name="dynamic_avoidance_param_path"/>
  <arg name="lane_change_param_path"/>
  <arg name="goal_planner_param_path"/>
  <arg name="start_planner_param_path"/>
  <arg name="drivable_area_expansion_param_path"/>
  <arg name="behavior_path_planner_param_path"/>
  <!-- behavior velocity planner -->
  <arg name="behavior_velocity_smoother_type_param_path"/>
  <arg name="behavior_velocity_planner_common_param_path"/>
  <arg name="behavior_velocity_planner_module_param_paths"/>
  <!-- parking -->
  <arg name="freespace_planner_param_path"/>
  <!-- motion -->
  <arg name="obstacle_avoidance_planner_param_path"/>
  <arg name="path_sampler_param_path"/>
  <arg name="obstacle_velocity_limiter_param_path"/>
  <arg name="surround_obstacle_checker_param_path"/>
  <arg name="obstacle_stop_planner_param_path"/>
  <arg name="obstacle_stop_planner_acc_param_path"/>
  <arg name="obstacle_cruise_planner_param_path"/>
  <!-- motion velocity smoother -->
  <arg name="motion_velocity_smoother_param_path"/>
  <arg name="velocity_smoother_type_param_path"/>
  <!-- planning validator -->
  <arg name="planning_validator_param_path"/>

  <group>
    <push-ros-namespace namespace="planning"/>
    <!-- mission planning module -->
    <group>
      <push-ros-namespace namespace="mission_planning"/>
      <include file="$(find-pkg-share tier4_planning_launch)/launch/mission_planning/mission_planning.launch.xml">
        <arg name="mission_planner_param_path" value="$(var mission_planner_param_path)"/>
      </include>
    </group>

    <!-- scenario planning module -->
    <group>
      <push-ros-namespace namespace="scenario_planning"/>
      <include file="$(find-pkg-share tier4_planning_launch)/launch/scenario_planning/scenario_planning.launch.xml">
        <arg name="vehicle_param_file" value="$(var vehicle_param_file)"/>
        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
        <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
        <arg name="use_surround_obstacle_check" value="$(var use_surround_obstacle_check)"/>
        <arg name="cruise_planner_type" value="$(var cruise_planner_type)"/>
        <arg name="use_experimental_lane_change_function" value="$(var use_experimental_lane_change_function)"/>
      </include>
    </group>

    <!-- planning validator -->
    <group>
      <include file="$(find-pkg-share planning_validator)/launch/planning_validator.launch.xml">
        <arg name="input_trajectory" value="/planning/scenario_planning/motion_velocity_smoother/trajectory"/>
        <arg name="output_trajectory" value="/planning/scenario_planning/trajectory"/>
        <arg name="planning_validator_param_path" value="$(var planning_validator_param_path)"/>
      </include>
    </group>

    <!-- planning evaluator -->
    <group>
      <include file="$(find-pkg-share planning_evaluator)/launch/planning_evaluator.launch.xml"/>
    </group>
  </group>
</launch>
